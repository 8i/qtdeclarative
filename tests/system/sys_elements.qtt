/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the test suite of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser General Public
** License version 2.1 as published by the Free Software Foundation and
** appearing in the file LICENSE.LGPL included in the packaging of this
** file. Please review the following information to ensure the GNU Lesser
** General Public License version 2.1 requirements will be met:
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights. These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU General
** Public License version 3.0 as published by the Free Software Foundation
** and appearing in the file LICENSE.GPL included in the packaging of this
** file. Please review the following information to ensure the GNU General
** Public License version 3.0 requirements will be met:
** http://www.gnu.org/copyleft/gpl.html.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms and
** conditions contained in a signed written agreement between you and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=qtdeclarative

testcase = {

    pre_existing_elements_data: {
        // ElementName: [preconditions,[groups]]
        Rectangle: ["",["QtQuick1.0","BAT"]],
        Image: ["",["QtQuick1.0","BAT"]],
        AnimatedImage: ["",["QtQuick1.0","BAT"]],
        BorderImage: ["",["QtQuick1.0","BAT"]],
        SystemPalette: ["",["QtQuick1.0","BAT"]],
        Text: ["",["QtQuick1.0","BAT"]],
        TextInput: ["",["QtQuick1.0","BAT"]],
        TextEdit: ["",["QtQuick1.0","BAT"]],
        FontLoader: ["",["QtQuick1.0","BAT"]],
        Flipable: ["",["QtQuick1.0","BAT"]],
        Flickable: ["",["QtQuick1.0","BAT"]],
        IntValidator: ["",["QtQuick1.0","BAT"]],
        DoubleValidator: ["",["QtQuick1.0","BAT"]],
        RegExpValidator: ["",["QtQuick1.0","BAT"]],
        Column: ["",["QtQuick1.0","BAT"]],
        Row: ["",["QtQuick1.0","BAT"]],
        Flow: ["",["QtQuick1.0","BAT"]],
        Grid: ["",["QtQuick1.0","BAT"]],
        Repeater: ["",["QtQuick1.0","BAT"]],
        ListView: ["",["QtQuick1.0","BAT"]],
        Keys: ["",["QtQuick1.0","BAT"]],
        MouseArea: ["",["QtQuick1.0","BAT"]],
        SequentialAnimation: ["",["QtQuick1.0","BAT"]],
        ParallelAnimation: ["",["QtQuick1.0","BAT"]],
        XmlListModel: ["",["QtQuick1.0","BAT"]],
        Scale: ["",["QtQuick1.0","BAT"]]
    },

    pre_existing_elements: function(prec,groups) {
        // Test Meta-data
        testTitle = currentDataTag()+ " Element";
        testBinary = "qmlscene tests/testapplications/elements/elements.qml";
        testGoal = "Verify the "+currentDataTag()+" element is shown correctly";
        testPreconditions = prec;
        testGroups = groups;

        // Test Steps
        prompt(twiki('---+++ ' + testTitle + '<br><br>
        *Goal:* ' + testGoal + '<br>
        *Pre-Requisites:* ' + testPreconditions + '<br>
        *Tested Binary:* ' + testBinary + '<br>
    | Select the '+currentDataTag()+' list item | Verify that the '+currentDataTag()+' application is displayed |
    | Follow the instructions in the in-app test | Verify all steps are completed successfully |'));
    },

    new_elements_data: {
        // ElementName: [preconditions,[groups]]
        ParticleSystem: ["",["QtQuick2.0","BAT"]],
        ImageParticle: ["",["QtQuick2.0","BAT"]],
        Emitter: ["",["QtQuick2.0","BAT"]],
        Affector: ["",["QtQuick2.0","BAT"]],
        Shape: ["",["QtQuick2.0","BAT"]],
        TrailEmitter: ["",["QtQuick2.0","BAT"]],
        Direction: ["",["QtQuick2.0","BAT"]]
    },

    new_elements: function(prec,groups) {
        // Test Meta-data
        testTitle = currentDataTag()+ " Element";
        testBinary = "qmlscene tests/testapplications/elements/elements.qml";
        testGoal = "Verify the "+currentDataTag()+" element is shown correctly";
        testPreconditions = prec;
        testGroups = groups;

        // Test Steps
        prompt(twiki('---+++ ' + testTitle + '<br><br>
        *Goal:* ' + testGoal + '<br>
        *Pre-Requisites:* ' + testPreconditions + '<br>
        *Tested Binary:* ' + testBinary + '<br>
    | Select the '+currentDataTag()+' list item | Verify that the '+currentDataTag()+' application is displayed |
    | Follow the instructions in the in-app test | Verify all steps are completed successfully |'));
    }
}


